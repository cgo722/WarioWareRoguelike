[gd_resource type="VisualShader" load_steps=28 format=3 uid="uid://rua5o635tv8"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_s04ur"]
parameter_name = "color"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_qo2bn"]
source = 5

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_658tc"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_emdwk"]
input_name = "light"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_wacdw"]
input_name = "normal"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_2pbv7"]
default_input_values = [0, 0.0, 1, 0.75]

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_w1cs0"]
default_input_values = [0, 0.0, 1, 2.08165e-12, 2, 0.5]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_xej53"]
parameter_name = "Specular_Min"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_8m5yy"]
parameter_name = "Specular_Max"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_j24nx"]
parameter_name = "intensity"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_ul1tl"]
parameter_name = "noise"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_wtrh8"]
operator = 2

[sub_resource type="FastNoiseLite" id="FastNoiseLite_17iao"]
fractal_octaves = 10
fractal_lacunarity = 1.41
fractal_gain = 0.27

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_cmqol"]
seamless = true
seamless_blend_skirt = 0.209
noise = SubResource("FastNoiseLite_17iao")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_5iybi"]
expanded_output_ports = [0]
source = 5
texture = SubResource("NoiseTexture2D_cmqol")

[sub_resource type="Gradient" id="Gradient_wj0g0"]
colors = PackedColorArray(0.666569, 0.666569, 0.666569, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_2hmx6"]
gradient = SubResource("Gradient_wj0g0")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_u2v3f"]
source = 5
texture = SubResource("GradientTexture2D_2hmx6")

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_w7ii3"]
default_input_values = [1, Vector2(2, 1), 2, Vector2(0, 0)]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_fe6ob"]
parameter_name = "Noise_2"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_8k632"]
parameter_name = "Intesity_2"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_cd1uo"]
expanded_output_ports = [0]
source = 5
texture = SubResource("NoiseTexture2D_cmqol")

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_8v3go"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_22246"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_ik6dq"]
default_input_values = [1, Vector2(1, 2), 2, Vector2(0, 0)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_p0spp"]
input_name = "time"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_odgea"]
source = 5
texture = SubResource("GradientTexture2D_2hmx6")

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D Noise_2;
uniform sampler2D Intesity_2;
uniform sampler2D noise;
uniform sampler2D intensity;
uniform sampler2D color;
uniform float Specular_Min;
uniform float Specular_Max;



void vertex() {
// Input:8
	float n_out8p0 = TIME;


// UVFunc:15
	vec2 n_in15p1 = vec2(2.00000, 1.00000);
	vec2 n_out15p0 = vec2(n_out8p0) * n_in15p1 + UV;


	vec4 n_out13p0;
// Texture2D:13
	n_out13p0 = texture(Noise_2, n_out15p0);


	vec4 n_out14p0;
// Texture2D:14
	n_out14p0 = texture(Intesity_2, vec2(n_out13p0.xy));


// UVFunc:7
	vec2 n_in7p1 = vec2(1.00000, 2.00000);
	vec2 n_out7p0 = vec2(n_out8p0) * n_in7p1 + UV;


	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(noise, n_out7p0);


	vec4 n_out9p0;
// Texture2D:9
	n_out9p0 = texture(intensity, vec2(n_out4p0.xy));


// FloatOp:12
	float n_out12p0 = n_out14p0.x * n_out9p0.x;


// Input:6
	vec3 n_out6p0 = VERTEX;


// VectorOp:5
	vec3 n_out5p0 = vec3(n_out12p0) * n_out6p0;


// Output:0
	VERTEX = n_out5p0;


}

void fragment() {
	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(color, UV);


// Output:0
	ALBEDO = vec3(n_out3p0.xyz);


}

void light() {
// Input:3
	vec3 n_out3p0 = LIGHT;


// Input:4
	vec3 n_out4p0 = NORMAL;


// DotProduct:2
	float n_out2p0 = dot(n_out3p0, n_out4p0);


// FloatOp:5
	float n_in5p1 = 0.75000;
	float n_out5p0 = n_out2p0 + n_in5p1;


// FloatParameter:7
	float n_out7p0 = Specular_Min;


// FloatParameter:8
	float n_out8p0 = Specular_Max;


// Clamp:6
	float n_out6p0 = clamp(n_out2p0, n_out7p0, n_out8p0);


// Output:0
	DIFFUSE_LIGHT = vec3(n_out5p0);
	SPECULAR_LIGHT = vec3(n_out6p0);


}
"
nodes/vertex/0/position = Vector2(700, 40)
nodes/vertex/4/node = SubResource("VisualShaderNodeTexture_cd1uo")
nodes/vertex/4/position = Vector2(-1800, -200)
nodes/vertex/5/node = SubResource("VisualShaderNodeVectorOp_8v3go")
nodes/vertex/5/position = Vector2(-480, 60)
nodes/vertex/6/node = SubResource("VisualShaderNodeInput_22246")
nodes/vertex/6/position = Vector2(-1420, 380)
nodes/vertex/7/node = SubResource("VisualShaderNodeUVFunc_ik6dq")
nodes/vertex/7/position = Vector2(-2520, -140)
nodes/vertex/8/node = SubResource("VisualShaderNodeInput_p0spp")
nodes/vertex/8/position = Vector2(-3220, -200)
nodes/vertex/9/node = SubResource("VisualShaderNodeTexture_odgea")
nodes/vertex/9/position = Vector2(-1220, -160)
nodes/vertex/10/node = SubResource("VisualShaderNodeTexture2DParameter_j24nx")
nodes/vertex/10/position = Vector2(-2260, 420)
nodes/vertex/11/node = SubResource("VisualShaderNodeTexture2DParameter_ul1tl")
nodes/vertex/11/position = Vector2(-3120, 300)
nodes/vertex/12/node = SubResource("VisualShaderNodeFloatOp_wtrh8")
nodes/vertex/12/position = Vector2(-820, -300)
nodes/vertex/13/node = SubResource("VisualShaderNodeTexture_5iybi")
nodes/vertex/13/position = Vector2(-1820, -620)
nodes/vertex/14/node = SubResource("VisualShaderNodeTexture_u2v3f")
nodes/vertex/14/position = Vector2(-1280, -580)
nodes/vertex/15/node = SubResource("VisualShaderNodeUVFunc_w7ii3")
nodes/vertex/15/position = Vector2(-2540, -560)
nodes/vertex/16/node = SubResource("VisualShaderNodeTexture2DParameter_fe6ob")
nodes/vertex/16/position = Vector2(-2720, -1200)
nodes/vertex/17/node = SubResource("VisualShaderNodeTexture2DParameter_8k632")
nodes/vertex/17/position = Vector2(-1840, -1220)
nodes/vertex/connections = PackedInt32Array(6, 0, 5, 1, 7, 0, 4, 0, 8, 0, 7, 2, 5, 0, 0, 0, 4, 0, 9, 0, 10, 0, 9, 2, 11, 0, 4, 2, 9, 0, 12, 1, 15, 0, 13, 0, 14, 0, 12, 0, 12, 0, 5, 0, 8, 0, 15, 2, 13, 0, 14, 0, 16, 0, 13, 2, 17, 0, 14, 2)
nodes/fragment/0/position = Vector2(180, 300)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_s04ur")
nodes/fragment/2/position = Vector2(-1560, 220)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_qo2bn")
nodes/fragment/3/position = Vector2(-680, 180)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 0, 0)
nodes/light/2/node = SubResource("VisualShaderNodeDotProduct_658tc")
nodes/light/2/position = Vector2(-740, 80)
nodes/light/3/node = SubResource("VisualShaderNodeInput_emdwk")
nodes/light/3/position = Vector2(-1780, -140)
nodes/light/4/node = SubResource("VisualShaderNodeInput_wacdw")
nodes/light/4/position = Vector2(-1620, 220)
nodes/light/5/node = SubResource("VisualShaderNodeFloatOp_2pbv7")
nodes/light/5/position = Vector2(-420, 20)
nodes/light/6/node = SubResource("VisualShaderNodeClamp_w1cs0")
nodes/light/6/position = Vector2(-420, 300)
nodes/light/7/node = SubResource("VisualShaderNodeFloatParameter_xej53")
nodes/light/7/position = Vector2(-1140, 300)
nodes/light/8/node = SubResource("VisualShaderNodeFloatParameter_8m5yy")
nodes/light/8/position = Vector2(-1140, 640)
nodes/light/connections = PackedInt32Array(3, 0, 2, 0, 4, 0, 2, 1, 2, 0, 5, 0, 5, 0, 0, 0, 2, 0, 6, 0, 7, 0, 6, 1, 8, 0, 6, 2, 6, 0, 0, 1)
